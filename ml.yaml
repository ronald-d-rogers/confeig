project: lora-cutoff

pretrained_model_name_or_path: meta-llama/Llama-2-7b-hf

################################################################################
# Instance parameters
################################################################################

# Instances type used for the training job
instance_type: ml.g5.2xlarge
# instance_type: ml.p4d.24xlarge

# The size of the EBS volume in GB
volume_size: 256

# The number of instances used for training
instance_count: 1

# How long to allow the job to run (in seconds)
max_run: 172800 # 2 * 24 * 60 * 60 (2 days)

# Whether to use spot instances to reduce costs
use_spot_instances: True

# How long to wait for a spot instance to become available (in seconds)
max_wait: 172801

################################################################################
# Distributed training parameters
################################################################################

# Whether to use distributed training
enable_distributed: False

# Number of GPUs to use
num_processes: 8

################################################################################
# Trainer parameters
################################################################################

epoch: 4

# Output directory where the model predictions and checkpoints will be stored
output_dir: ./results

# Number of training epochs
num_train_epochs: 1

# Enable fp16/bf16 training (set bf16 to True with an A100)
fp16: False
bf16: True

# Batch size per GPU for training
per_device_train_batch_size: 4

# Batch size per GPU for evaluation
per_device_eval_batch_size: 4

# Number of update steps to accumulate the gradients for
gradient_accumulation_steps: 2

# Enable gradient checkpointing
gradient_checkpointing: True

# Maximum gradient normal (gradient clipping)
max_grad_norm: 0.3

# Initial learning rate (AdamW optimizer)
learning_rate: 1e-5

# Weight decay to apply to all layers except bias/LayerNorm weights
weight_decay: 0.001

# Optimizer to use
# optim: paged_adamw_32bit

# Learning rate schedule
lr_scheduler_type: cosine

# Number of training steps (overrides num_train_epochs)
max_steps: -1

# Ratio of steps for a linear warmup (from 0 to learning rate)
warmup_ratio: 0.03

# Group sequences into batches with same length
# Saves memory and speeds up training considerably
group_by_length: True

# Save checkpoint every X updates steps
save_steps: .05

# Log every X updates steps
logging_steps: .05

report_to: tensorboard

################################################################################
# DeepSpeed parameters
################################################################################

# Whether to use DeepSpeed
enable_deepspeed: False

zero_stage: 3

offload: False

################################################################################
# LoRA parameters
################################################################################

# Whether to use LoRA
enable_lora: True

# LoRA attention dimension
lora_r: 8

# Alpha parameter for LoRA scaling
lora_alpha: 16

# Dropout probability for LoRA layers
lora_dropout: 0.05

target_modules: ["q_proj", "v_proj", "k_proj", "o_proj", "gate_proj", "up_proj", "down_proj", "embed_tokens", "lm_head"]

learning_rate: 3e-5

optim: paged_adamw_32bit

################################################################################
# Bits and Bytes
################################################################################

# Activate 8-bit precision base model loading
load_in_8bit: False

# Activate 4-bit precision base model loading
load_in_4bit: True

# Compute dtype for 4-bit base models
bnb_4bit_compute_dtype: bfloat16

# Quantization type (fp4 or nf4)
bnb_4bit_quant_type: nf4

# Activate nested quantization for 4-bit base models (double quantization)
bnb_4bit_use_double_quant: True

################################################################################
# SFT parameters
################################################################################

# Maximum sequence length to use
max_seq_length: 768

# Pack multiple short examples in the same input sequence to increase efficiency
packing: False